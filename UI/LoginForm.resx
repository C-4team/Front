<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sJrmVx4n98YAAAAASUVORK5CYII=
</value>
  </data>
</root>